import React, { useState, useEffect, useContext } from "react";
import { observer } from "mobx-react-lite";
import { UiStoreContext } from "../../stores/UiStore.js";
import axios from "axios";
import firebase from "firebase";

import CategoriaPrincipal from '../categorias/CategoriaPrincipal'

import { ingr } from './ing/ingredientes'

import './style/criarReceita.scss'

const CriarReceita = observer(props => {

  const uiStore = useContext(UiStoreContext);

  const [ing, setIng] = useState()
  const [qtd, setQtd] = useState()
  const [titulo, setTitulo] = useState('');
  const [ingredientes, setIngredientes] = useState([]);
  const [categorias, setCategorias] = useState([])
  const [receita, setReceita] = useState({})
  const [userToken, setUserToken] = useState()
  const [uid, setUid] = useState()

  const categoriasPrincipais = [
    {
      id: 0,
      nome: 'Bebidas',
      sub: ['Drinks', 'Chás', 'Vitaminas', 'Cafés', 'Sucos']
    },
    {
      id: 1,
      nome: 'Tradicional',
      sub: ['Carnes', 'Aves', 'Peixes e Frutos do Mar', 'Sopas', 'Massas', 'Pratos Típicos Brasileiros', 'Pratos Estrangeiros', 'Ovos e Laticínios']
    },
    {
      id: 2,
      nome: 'Acompanhamentos',
      sub: ['Saladas', 'Molhos', 'Aperitivos']
    },
    {
      id: 3,
      nome: 'Lanches',
      sub: ['Bolos e Tortas', 'Doces e Sobremesas', 'Salgados', 'Pães']
    },
    {
      id: 4,
      nome: 'Saudavel',
      sub: ['Light', 'Vegetariano', 'Sem Lactose', 'Sem Glúten', 'Grãos']

    },
    {
      id: 5,
      nome: 'Especiais',
      sub: ['Páscoa', 'Aniversários', 'Festa Junina', 'Natal e Ano Novo', 'Confeitaria']
    },

  ]

  useEffect(() => {
    checkUser()
  }, [])

  const checkUser = () => {
    firebase.auth().onAuthStateChanged(user => {
      if (user) {
        setUid(user.uid)
      } else {
        console.log('not signed in')
      }
    })
  }

  const addIngredientes = () => {
    const tmpIng = {
      nome: ing,
      qtd: qtd
    }
    setIngredientes([...ingredientes, tmpIng])
    setIng('')
    setQtd('')
  }

  const onHandleSubmit = async e => {
    e.preventDefault();
    let ingArr = []
    let catArr = []
    try {
      ingArr = ingredientes.split(",");
      catArr = categorias.split(",");
    } catch (e) {
      console.log('Preencha os ingredientes e categorias')
    }
    const newReceita = {
      titulo,
      ingredientes: ingArr,
      categorias: catArr,
      uid
    };
    setReceita(newReceita)

    axios
      .post("/api/receitas/criar", newReceita, {
        // headers: {
        //   "x-auth-token": this.state.userToken
        // }
      })
      .then(res => {
        if (res.status === 200) {
          // redireciona para pagina de receitas criadas
          console.log('funcionou!')
          uiStore.changeConteudoAtual('Suas Receitas')
        }
      })
      .catch(err => console.log("erro", err));
  };

  return (
    <>
      {/* <h4 className="mt-3 mb-5">Criar receita</h4> */}
      <div className="d-flex justify-content-center criar-receita">
        <div className="row">
          <div className="d-flex">
            <form onSubmit={e => onHandleSubmit(e)}>
              <div className="form-group">
                <h5 htmlFor="titulo">Título</h5>
                <input
                  name="titulo"
                  onChange={e => setTitulo(e.target.value)}
                  type="text"
                  className="form-control"
                />
                <small className="form-text text-muted">
                  Aqui vai o nome da sua receita
                  </small>
              </div>
              {/* <div className="form-group">
                <h5 htmlFor="ing">Ingredientes</h5>
                <input
                  name="ingredientes"
                  onChange={e => setIngredientes(e.target.value)}
                  type="text"
                  className="form-control"
                />

              </div> */}
              <div className="form-group">
                <h5 htmlFor="cat">Categorias</h5>
                {/* <input
                  name="categorias"
                  onChange={e => setCategorias(e.target.value)}
                  type="text"
                  className="form-control"
                /> */}
                <div className="d-flex flex-wrap">
                  {
                    categoriasPrincipais.map(categoria => <CategoriaPrincipal key={categoria.id} categoria={categoria} />)
                  }
                </div>
                <small className="form-text text-muted">
                  As categorias que sua receita se encaixa
                  </small>


                <div className="d-flex flex-wrap justify-content-center my-5">
                  {
                    ingr.map(i => {
                      const cp = uiStore.categoriaPrincipal
                      if (cp.includes(i.pai)) {
                        return <div className='sub-cat p-2 m-2'>{i.nome}</div>
                      }
                    })
                  }
                </div>

              </div>
              <div className="row my-2">
                <div className="col-5">
                  <input value={ing} onChange={e => setIng(e.target.value)} type="text" className="form-control" name="ing" id="" />
                </div>
                <div className="col-5">
                  <input value={qtd} onChange={e => setQtd(e.target.value)} type="text" className="form-control" name="qtd" id="" />
                </div>
                <div className="col-2">
                  <button onClick={() => addIngredientes()} className="btn btn-default">Adicionar</button>
                </div>
              </div>
              <div className="row mx-2 my-2">
                {ingredientes.map(ing => <p>{ing.nome}</p>)}
              </div>
              <button className="btn btn-outline-success btn-block mt-4">
                Enviar
                </button>
            </form>
          </div>
        </div>
      </div>
    </>
  );
})


export default CriarReceita;
